package org.kymjs.kjframe.demo.widget;import java.util.ArrayList;import java.util.List;import org.kymjs.kjframe.KJActivity;import org.kymjs.kjframe.KJBitmap;import org.kymjs.kjframe.demo.R;import org.kymjs.kjframe.demo.bean.ImageData;import org.kymjs.kjframe.ui.BindView;import org.kymjs.kjframe.widget.AdapterHolder;import org.kymjs.kjframe.widget.KJAdapter;import org.kymjs.kjframe.widget.KJListView;import org.kymjs.kjframe.widget.KJRefreshListener;import org.kymjs.kjframe.widget.RoundImageView;import android.widget.AbsListView;import android.widget.TextView;public class KJListViewDemo extends KJActivity {    @BindView(id = R.id.listview)    private KJListView mList;    private final KJBitmap kjb = new KJBitmap();    private List<DataBean> datas;    @Override    public void setRootView() {        setContentView(R.layout.aty_kjlistview);    }    @Override    public void initData() {        super.initData();        datas = new ArrayList<DataBean>();        for (int i = 0; i < ImageData.imgs1.length; i++) {            DataBean object = new DataBean();            object.name = "图片" + i;            object.url = ImageData.imgs1[i];            // object.url = FileUtils.getSaveFolder("tencent/QQ_images") + "/"            // + ImageData.imgs1[i];            datas.add(object);        }    }    private void refresh() {        // 此处添加刷新方法    }    @Override    public void initWidget() {        super.initWidget();        mList.setAdapter(new DemoAdapter(mList, datas, R.layout.list_item));        mList.setOnRefreshListener(new KJRefreshListener() {            @Override            public void onRefresh() {                /** 做耗时操作 */                refresh();                mList.stopRefreshData();            }            @Override            public void onLoadMore() {                /** 做耗时操作 */                refresh();                mList.stopRefreshData();            }        });    }    class DataBean {        String name;        String url;    }    static class ViewHolder {        RoundImageView img;        TextView tv;    }    /**     * 万能适配器，封装了ViewHolder的一系列重复操作，且支持在listview滑动时不加载图片，只在滑动停止时才加载图片<br>     *      * 更多用法可以查看KJBlog中的用法：https://github.com/KJFrame/KJBlog/blob/master/KJBlog/     * src/org/kymjs/blog/adapter/BlogAdapter.java     */    class DemoAdapter extends KJAdapter<DataBean> {        public DemoAdapter(AbsListView view, List<DataBean> mDatas,                int itemLayoutId) {            super(view, mDatas, itemLayoutId);        }        @Override        public void convert(AdapterHolder helper, DataBean item,                boolean isScrolling) {            helper.setText(R.id.list_item_tv, item.url);            // //封装的方法，请查看API文档或KJBlog项目            // helper.setImageByUrl(kjb, R.id.list_item_img, item.url);            if (!isScrolling) {                kjb.displayWithLoadBitmap(helper.getView(R.id.list_item_img),                        item.url, R.drawable.ic_launcher);            } else {                kjb.displayCacheOrDefult(helper.getView(R.id.list_item_img),                        item.url, R.drawable.ic_launcher);            }        }    }}